//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfAppAutorisation.Models
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.ComponentModel.DataAnnotations;
    public partial class Personal_data
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Personal_data()
        {
            this.Employees = new HashSet<Employees>();
            this.Producers = new HashSet<Producers>();
            this.Singers = new HashSet<Singers>();
        }
    
        public long ID_personal_data { get; set; }
        [Required(ErrorMessage = "Имя обязательна для заполнения.")]
        public string name { get; set; }
        [Required(ErrorMessage = "Фамилия обязательна для заполнения.")]
        public string surname { get; set; }
        [Required(AllowEmptyStrings = true)]
        public string patronymic { get; set; }
        public string telephone { get; set; }
        [EmailAddress(ErrorMessage = "Некорректный формат email.")]
        public string gmail { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Employees> Employees { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Producers> Producers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Singers> Singers { get; set; }

        public string jobTitle 
        {
            get 
            {
                return SoundEntities.GetContext().Employees.FirstOrDefault(x => x.ID_personal_data == this.ID_personal_data).Jobtitles.title.ToString();
            }
        }

        public long jobId {
            get 
            {
                return SoundEntities.GetContext().Employees.FirstOrDefault(x => x.ID_personal_data == this.ID_personal_data).ID_jobtitle;
            }
        }
     
    }
}
